window对象
          window对象是BOM的核心，window对象指当前的浏览器窗口。（详见w3school）
                    //点击“点我，进入github”，弹出确认对话框“欢迎来到我的github”，确认进入，否则不进入。
                    <!DOCTYPE HTML>
                    <html>
                    <head>
                    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
                    <title>window对象</title>
                    <script type="text/javascript">
                    function fun(){
                        var git = confirm("欢迎来到我的github");
                        if (git == true){
                              window.open('https://www.github.com/wangmengjun142857','_blank','width = 600,height = 400 ');
                        }
                        else {
                            return ;
                        }
                    }

                    </script>
                    </head>
                    <body>
                    <form>
                    <input type="button" value="点我，进入github"  onclick = "fun()"/>
                    </form>
                    </body>
                    </html>

JavaScript 计时器
          在JavaScript中，我们可以在设定的时间间隔之后来执行代码，而不是在函数被调用后立即执行。
          计时器类型：
              一次性计时器： setTimeout()  仅在指定的延迟时间之后触发一次。
              间隔性触发计时器： setInterval()   每隔一定的时间间隔就触发一次。
     计时器setInterval()
          在执行时,从载入页面后每隔指定的时间执行代码。
          语法:setInterval(代码,交互时间);
          参数说明：
              1. 代码：要调用的函数或要执行的代码串。
              2. 交互时间：周期性执行或调用表达式之间的时间间隔，以毫秒计（1s=1000ms）。
          返回值:一个可以传递给 clearInterval() 从而取消对"代码"的周期性执行的值。
          调用函数格式(假设有一个clock()函数):setInterval("clock()",1000)或setInterval(clock,1000)       
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
